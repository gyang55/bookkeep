service: family-bookkeeping

provider:
  name: aws
  runtime: nodejs23.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'ca-central-1'}
  environment:
    EXPENSES_TABLE: ${self:service}-${self:provider.stage}-expenses
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: !GetAtt ExpensesTable.Arn

functions:
  createExpense:
    handler: src/functions/createExpense.handler
    events:
      - http:
          path: expenses
          method: post
          cors: true
  listExpenses:
    handler: src/functions/listExpenses.handler
    events:
      - http:
          path: expenses
          method: get
          cors: true

resources:
  Resources:
    ExpensesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.EXPENSES_TABLE}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: yearMonth
            AttributeType: S
          - AttributeName: category
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: yearMonth-index
            KeySchema:
              - AttributeName: yearMonth
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: category-index
            KeySchema:
              - AttributeName: category
                KeyType: HASH
            Projection:
              ProjectionType: ALL
    
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:service}-${self:provider.stage}-user-pool
        AutoVerifiedAttributes:
          - email
        UsernameAttributes:
          - email
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: true
            RequireNumbers: true
            RequireSymbols: false
            RequireUppercase: true
    
    # Add App Client
    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ${self:service}-${self:provider.stage}-app-client
        UserPoolId:
          Ref: CognitoUserPool
        ExplicitAuthFlows:
          - ALLOW_USER_SRP_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
        GenerateSecret: false